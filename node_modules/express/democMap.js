
      // This example creates circles on the map, representing populations in North
      // America.

      // First, create an object containing LatLng and population for each city.
      var fBase = new Firebase("https://glowing-inferno-6337.firebaseio.com/");
      var bNode = fBase.child("Tweets/Bernie");
      var cNode = fBase.child("Tweets/Clinton");
      var flag = false;
      var information = {};
      var map;
      map = new jvm.Map({
	    map: 'world_mill',
	    baackgroundColor: '#8f6571',
	    markerLabelStyle: {
		initial: {
			'font-family': 'Verdana',
			'font-size': '19',
			'font-weight': 'bold',
			cursor: 'default',
			fill: 'black'
		},
		hover: {
			cursor: 'pointer'
		}
	    },
            markerStyle: {
               initial: {
                 fill: 'red'
                 }
           },
	   onMarkerTipShow: function(e, label, code) {
			label.html('<div style="padding: 25px 15px 15px; position: relative; background-color: black;"><p class="lead">'+label.html()+'</p></div>');
		},
           container: $('#map')});
      
/*      function initMap() {
        // Create the mahttp://stackoverflow.com/questions/3559070/are-there-dictionaries-in-javascript-like-pythonp.
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 4,
          center: {lat: 37.090, lng: -95.712},
          mapTypeId: google.maps.MapTypeId.TERRAIN
        });*/
	var markerIndex = 0;
        cNode.on("child_added",function(snapshot,prevChildKey){
          var newInfo = snapshot.val();
          var latitude = newInfo.long;
          var long = newInfo.lat;
          var feeling = newInfo.attitude;
	  var who = newInfo.who;
          console.log(feeling);
          var color = '#ff0000';
	  if(feeling==="Negative"){
            color='#ff0000';
          }
          else if(feeling ==="Positive"){
            color = "#1aff1a";
          }
          else{
            color = "#ffb366";
          }
	  //if ( who == "clinton" || who == "bernie") {
	  map.addMarker(markerIndex, {latLng: [latitude, long], style: { fill: color, 'font-size': '26' }, name: newInfo.tweet});
         markerIndex += 1;
	});
        bNode.on("child_added",function(snapshot,prevChildKey){
          var newInfo = snapshot.val();
          var latitude = newInfo.long;
          var long = newInfo.lat;
          var feeling = newInfo.attitude;
	  var who = newInfo.who;
          console.log(feeling);
          var color = '#ff0000';
	  if(feeling==="Negative"){
            color='#ff0000';
          }
          else if(feeling ==="Positive"){
            color = "#1aff1a";
          }
          else{
            color = "#ffb366";
          }
	  //if ( who == "clinton" || who == "bernie") {
	  map.addMarker(markerIndex, {latLng: [latitude, long], style: { fill: color, 'font-size': 26 }, name: newInfo.tweet});
 markerIndex += 1;
});	 

          /*var newCircle = new google.maps.Circle({
            fillColor: color,
            strokeColor:color,
            strokeOpacity: .9,
            strokeWeight: 2,
            fillOpacity: 0.7,
			clickable: true,
            map: map,
            center: {lat:latitude,lng:long},
            radius: 10000

          });*/
		    /*var contentWindow = '<div id="content" style="color:black">'+
		'<div id="siteNotice">'+
		'</div>'+
		'<h3 id="firstHeading" class="firstHeading">'+ who.charAt(0).toUpperCase() + who.slice(1) + '</h3>'+
		'<div id="bodyContent">'+
		'<p><b>'+ newInfo.tweet+ '</b>'
		'</div>'+
		'</div>';*/
	/*var infoWindow= new google.maps.InfoWindow({
		content: contentWindow
    });*/
	/*google.maps.event.addListener(newCircle, 'click', function(ev){
    	infoWindow.setPosition(ev.latLng);
		infoWindow.open(map);
	});
	}
          console.log(latitude);
          console.log(long);
        });
}
*/

        // Construct the circle for each value in citymap.
        // Note: We scale the area of the circle based on the population.
